name: update-digests

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 * * * *'

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.5

      - name: Update digests
        env:
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          git config --global user.email "${GITHUB_OWNER}@users.noreply.github.com"
          git config --global user.name "${GITHUB_OWNER}"

          while IFS= read -r line; do
            if [[ -n ${line} ]]; then
              array=(${line})
              repo=${array[0]}
              branch=${array[1]}
              git clone -b "${branch}" "https://${GITHUB_TOKEN}@github.com/${GITHUB_OWNER}/${repo}.git"
              cd ${GITHUB_WORKSPACE}/${repo} || exit 1
              if ! bash ./update.sh checkdigests; then
                json='{"embeds": [{"title": "Digest update","description": "Something went wrong detecting changes for **['${GITHUB_OWNER}'/'${repo}':'${branch}'](https://github.com/'${GITHUB_REPOSITORY}'/actions/runs/'${GITHUB_RUN_ID}')**.","color": 15158332,"footer": {"text": "Powered by GitHub Actions"},"timestamp": "'$(date -u --iso-8601=seconds)'"}]}'
                [[ -z ${array[2]} ]] && curl -fsSL -X POST -H "Content-Type: application/json" -d "${json}" "${DISCORD_WEBHOOK}"
              fi
              git add .
              if git commit -m "Digest update"; then
                git push
                GIT_SHA=$(git log -n 1 --pretty=format:"%H")
                json='{"embeds": [{"title": "Digest update","description": "Digest changes detected for **['${GITHUB_OWNER}'/'${repo}':'${branch}'](https://github.com/'${GITHUB_OWNER}'/'${repo}'/commit/'${GIT_SHA}')**.","color": 4886754,"footer": {"text": "Powered by GitHub Actions"},"timestamp": "'$(date -u --iso-8601=seconds)'"}]}'
                [[ -z ${array[2]} ]] && curl -fsSL -X POST -H "Content-Type: application/json" -d "${json}" "${DISCORD_WEBHOOK}"
              fi
              cd ${GITHUB_WORKSPACE} || exit 1
              rm -rf ${GITHUB_WORKSPACE}/${repo}
            fi
          done < "${GITHUB_WORKSPACE}/tosync"
