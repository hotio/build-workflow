name: sync-README.md

on:
  workflow_dispatch:
  push:
    paths:
      - 'README.md'
    branches:
      - master

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Sync README.md
        env:
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          git config --global user.email "${GITHUB_OWNER}@users.noreply.github.com"
          git config --global user.name "${GITHUB_OWNER}"

          while IFS= read -r repo; do
              while IFS= read -r branch; do
                  echo "Updating ${repo}/${branch}..."
                  git clone -b "${branch}" "https://${GITHUB_TOKEN}@github.com/${GITHUB_OWNER}/${repo}.git"
                  cp "${GITHUB_WORKSPACE}/README.md" "${GITHUB_WORKSPACE}/${repo}/README.md"
                  cd "${GITHUB_WORKSPACE}/${repo}" || exit 1
                  git add README.md
                  if git commit -m "Updated README.md [skip ci]"; then
                      git push
                  fi
                  cd "${GITHUB_WORKSPACE}" || exit 1
                  rm -rf "${GITHUB_WORKSPACE:?}/${repo}"
              done < <(curl -u "${GITHUB_OWNER}:${GITHUB_TOKEN}" -fsSL "https://api.github.com/repos/${GITHUB_OWNER}/${repo}/branches" | jq -r '.[] | .name')
          done < <(curl -u "${GITHUB_OWNER}:${GITHUB_TOKEN}" -fsSL "https://api.github.com/users/${GITHUB_OWNER}/repos?per_page=1000" | jq -r '.[] | select(.topics[]=="docker-image") | .name')

      - name: Update Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: |
          TOKEN=$(jq -nc --arg username "${DOCKER_USER}" --arg password "${DOCKER_PASS}" '{$username, $password}' | curl -sH "Content-Type: application/json"  -d @-  "https://hub.docker.com/v2/users/login" | jq -r 'select(.token != null) | .token')
          json=$(curl -fsSL "https://hub.docker.com/v2/repositories/${DOCKER_USER}/?page_size=300")
          images=$(jq -r '.results|.[]|.name' <<< "${json}")
          while IFS= read -r image; do
            jq -nc --arg full_description "$(cat "README.md")" --argjson description "\"Please visit https://hotio.dev for documentation\"" '{"registry": "registry-1.docker.io", $full_description, $description} | del(.[] | nulls)' | curl -sL  -X PATCH  -d @-  -o /tmp/out -H "Content-Type: application/json" -H "Authorization: JWT ${TOKEN}" -w "%{http_code}" "https://hub.docker.com/v2/repositories/${DOCKER_USER}/${image}/"
          done <<< "${images}"
